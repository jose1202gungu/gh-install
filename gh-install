#!/bin/bash
set -eo pipefail

TMP="/tmp/.gh-install"
BINPATH="${GH_BINPATH:-$HOME/.local/bin}"
REPO=$1

if [ -z $REPO ]; then
    echo "usage: gh install user/repo"
    exit 1
fi


rm -rf $TMP
mkdir -p $TMP

PS3="> Select version: "
select tag in $(gh api "repos/$REPO/releases" -q ".[].tag_name"); do break; done

PS3="> Select file: "
select filename in $(gh api "repos/$REPO/releases" -q '.[] | select(.tag_name == "'$tag'") | .assets[].name'); do break; done

echo "[*] Downloading... $filename"
gh release download $tag --repo "$REPO" --pattern "$filename" --dir "$TMP"

# extract()
# taken from: https://unix.stackexchange.com/a/168/245465 
extract () {
    for arg in $@ ; do
        if [ -f $arg ] ; then
            case $arg in
                *.tar.bz2)  tar xjf $arg      ;;
                *.tar.gz)   tar xzf $arg      ;;
                *.tar.xz)   tar xzf $arg      ;;
                *.bz2)      bunzip2 $arg      ;;
                *.gz)       gunzip $arg       ;;
                *.tar)      tar xf $arg       ;;
                *.tbz2)     tar xjf $arg      ;;
                *.tgz)      tar xzf $arg      ;;
                *.zip)      unzip $arg        ;;
                *.Z)        uncompress $arg   ;;
                *.rar)      rar x $arg        ;;  # 'rar' must to be installed
                *)          echo "'$arg' cannot be extracted, assuming it's binary" && return 1;;
            esac
        else
            echo "'$arg' is not a valid file" && return 1
        fi
    done
    return 0
}

(
    cd $TMP
    echo "[*] Extracting..."

    if extract $filename; then
        PS3="> Select binary: "
        select bin in $(find * -type f -not -path "*$filename"); do break; done
    else
        bin=$filename
    fi

    # install
    basename=$(basename "$bin")
    read -p "> Choose a name (empty to leave: $basename): " name
    target="$BINPATH/${name:-$basename}"
    mv "$bin" "$target"
    chmod +x "$target"

    echo "Success!"
    echo "Saved in: $target"
)
